{"remainingRequest":"c:\\Users\\tarena\\Desktop\\新建文件夹\\vue_app_000\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js!c:\\Users\\tarena\\Desktop\\新建文件夹\\vue_app_000\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!c:\\Users\\tarena\\Desktop\\新建文件夹\\vue_app_000\\vue_app_00\\src\\components\\messsage\\Home.vue?vue&type=script&lang=js","dependencies":[{"path":"c:\\Users\\tarena\\Desktop\\新建文件夹\\vue_app_000\\vue_app_00\\src\\components\\messsage\\Home.vue","mtime":1564539376746},{"path":"c:\\Users\\tarena\\Desktop\\新建文件夹\\vue_app_000\\vue_app_00\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"c:\\Users\\tarena\\Desktop\\新建文件夹\\vue_app_000\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"c:\\Users\\tarena\\Desktop\\新建文件夹\\vue_app_000\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// 引入TitleBar\nimport TitleBar from \"./common/TitleBar.vue\"; // 引入messagelist\n\nimport MessageList from \"./common/MessageList.vue\"; //引入底部导航条图片切换组件\n\nimport TabBarIcon from \"./common/TabBarIcon.vue\";\nexport default {\n  data: function data() {\n    return {\n      //active 保存字符串 子面板的id\n      active: \"message\",\n      //在data添加属性 currentIndex\n      //集中保存所有按钮状态\n      currentIndex: [{\n        isSelect: true\n      }, //保存第一个按钮状态\n      {\n        isSelect: false\n      }, //1保存第二个按钮状态\n      {\n        isSelect: false\n      }, //2保存第三个按钮状态\n      {\n        isSelect: false\n      }]\n    };\n  },\n  //注册TitleBar\n  methods: {\n    changeState: function changeState(idx) {\n      //功能：指定当前按钮状态修改true\n      //其它按钮状态修改 false\n      // 1:创建循环遍历状态数组\n      for (var i = 0; i < this.currentIndex.length; i++) {\n        // 2:获取用户点击下标\n        var ui = idx;\n        console.log(ui); // 与当前数据元素下标比较\n        // 3:如果两个值相等当前状态true\n\n        if (ui == i) {\n          this.currentIndex[i].isSelect = true;\n        } else {\n          // 4:其它元素状态false\n          this.currentIndex[i].isSelect = false;\n        }\n      }\n    },\n    //子组件在运行的时候 需要父组件传递进去\n    mysearch: function mysearch() {\n      //TitleBar子组件所需处理函数\n      console.log(\"搜索\");\n    },\n    myadd3: function myadd3() {\n      //TitleBar子组件所需处理函数\n      console.log(\"添加\");\n    }\n  },\n  components: {\n    //注册顶部标题子组件\n    \"titlebar\": TitleBar,\n    //注册消息列表子组件\n    \"messagelist\": MessageList,\n    //注册底部导航图片子组件\n    \"tabbaricon\": TabBarIcon\n  }\n};",{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqDA;AACA,OAAA,QAAA,MAAA,uBAAA,C,CACA;;AACA,OAAA,WAAA,MAAA,0BAAA,C,CACA;;AACA,OAAA,UAAA,MAAA,yBAAA;AACA,eAAA;AACA,MADA,kBACA;AACA,WAAA;AACA;AACA,cAAA,SAFA;AAGA;AACA;AACA,oBAAA,CAAA;AACA,kBAAA;AADA,OAAA,EAEA;AACA;AACA,kBAAA;AADA,OAHA,EAKA;AACA;AACA,kBAAA;AADA,OANA,EAQA;AACA;AACA,kBAAA;AADA,OATA;AALA,KAAA;AAmBA,GArBA;AAqBA;AACA,WAAA;AACA,eADA,uBACA,GADA,EACA;AACA;AACA;AACA;AACA,WAAA,IAAA,IAAA,CAAA,EAAA,IAAA,KAAA,YAAA,CAAA,MAAA,EAAA,GAAA,EAAA;AACA;AACA,YAAA,KAAA,GAAA;AACA,gBAAA,GAAA,CAAA,EAAA,EAHA,CAIA;AACA;;AACA,YAAA,MAAA,CAAA,EAAA;AACA,eAAA,YAAA,CAAA,CAAA,EAAA,QAAA,GAAA,IAAA;AACA,SAFA,MAEA;AACA;AACA,eAAA,YAAA,CAAA,CAAA,EAAA,QAAA,GAAA,KAAA;AACA;AACA;AACA,KAlBA;AAmBA;AACA,YApBA,sBAoBA;AAAA;AACA,cAAA,GAAA,CAAA,IAAA;AACA,KAtBA;AAuBA,UAvBA,oBAuBA;AAAA;AACA,cAAA,GAAA,CAAA,IAAA;AACA;AAzBA,GAtBA;AAiDA,cAAA;AACA;AACA,gBAAA,QAFA;AAGA;AACA,mBAAA,WAJA;AAKA;AACA,kBAAA;AANA;AAjDA,CAAA","sourcesContent":["<template>\r\n    <div>\r\n        <!-- Home.vue -->\r\n        <!-- 1:引入TitleBar.vue -->\r\n        <!-- 2:注册TitleBar.vue -->\r\n        <!-- 3:调用TitleBar 传参数 -->\r\n        <titlebar leftTitle=\"微信(11)\" :rightFirstImg=\"require('../../assets/ic_search.png')\"\r\n            :rightSecondImg=\"require('../../assets/ic_add.png')\" :search=\"mysearch\" :add3=\"myadd3\"></titlebar>\r\n        <!-- 2:保留元素 -->\r\n        <!-- 3:面板组件 -->\r\n        <mt-tab-container v-model=\"active\">\r\n            <!-- 3,1:子面板 -->\r\n            <mt-tab-container-item id=\"message\">\r\n                <!-- 引入messagelist -->\r\n                <messagelist></messagelist>\r\n            </mt-tab-container-item>\r\n        </mt-tab-container>\r\n        <!-- 4:底部导航条 -->\r\n        <mt-tabbar v-model=\"active\" fixed>\r\n            <!-- 第一个按钮 -->\r\n            <mt-tab-item id=\"message\" @click.native=\"changeState(0)\">\r\n                <tabbaricon :selectedImage=\"require('../../assets/ic_weixin_selected.png')\"\r\n                    :normalImage=\"require('../../assets/ic_weixin_normal.png')\" :focused=\"currentIndex[0].isSelect\">\r\n                </tabbaricon>\r\n                <!-- 按钮状态保存数组下标0属性中 -->\r\n                微信\r\n            </mt-tab-item>\r\n            <!-- 第二个按钮 -->\r\n            <mt-tab-item id=\"contact\" @click.native=\"changeState(1)\">\r\n                <tabbaricon :selectedImage=\"require('../../assets/ic_contacts_selected.png')\"\r\n                    :normalImage=\"require('../../assets/ic_contacts_normal.png')\" :focused=\"currentIndex[1].isSelect\">\r\n                </tabbaricon>\r\n                <!-- 按钮状态保存数组下标0属性中 -->\r\n                通讯录\r\n            </mt-tab-item>\r\n            <!-- 第三个按钮 -->\r\n            <mt-tab-item id=\"find\" @click.native=\"changeState(2)\">\r\n                <tabbaricon :selectedImage=\"require('../../assets/ic_find_selected.png')\"\r\n                    :normalImage=\"require('../../assets/ic_find_normal.png')\" :focused=\"currentIndex[2].isSelect\">\r\n                </tabbaricon>\r\n                发现\r\n            </mt-tab-item>\r\n            <!-- 第四个按钮 -->\r\n            <mt-tab-item id=\"me\" @click.native=\"changeState(3)\">\r\n                <tabbaricon :selectedImage=\"require('../../assets/ic_me_selected.png')\"\r\n                    :normalImage=\"require('../../assets/ic_me_normal.png')\" :focused=\"currentIndex[3].isSelect\">\r\n                </tabbaricon>\r\n                我\r\n            </mt-tab-item>\r\n        </mt-tabbar>\r\n    </div>\r\n</template>\r\n<script>\r\n    // 引入TitleBar\r\n    import TitleBar from \"./common/TitleBar.vue\"\r\n    // 引入messagelist\r\n    import MessageList from \"./common/MessageList.vue\"\r\n    //引入底部导航条图片切换组件\r\n    import TabBarIcon from \"./common/TabBarIcon.vue\"\r\n    export default {\r\n        data() {\r\n            return {\r\n                //active 保存字符串 子面板的id\r\n                active: \"message\",\r\n                //在data添加属性 currentIndex\r\n                //集中保存所有按钮状态\r\n                currentIndex: [{\r\n                        isSelect: true\r\n                    }, //保存第一个按钮状态\r\n                    {\r\n                        isSelect: false\r\n                    }, //1保存第二个按钮状态\r\n                    {\r\n                        isSelect: false\r\n                    }, //2保存第三个按钮状态\r\n                    {\r\n                        isSelect: false\r\n                    }, //3保存第四个按钮状态\r\n                ]\r\n            }\r\n        }, //注册TitleBar\r\n        methods: {\r\n            changeState(idx) {\r\n                //功能：指定当前按钮状态修改true\r\n                //其它按钮状态修改 false\r\n                // 1:创建循环遍历状态数组\r\n                for(var i=0;i<this.currentIndex.length;i++){\r\n                    // 2:获取用户点击下标\r\n                    var ui=idx;\r\n                    console.log(ui)\r\n                    // 与当前数据元素下标比较\r\n                // 3:如果两个值相等当前状态true\r\n                if(ui==i){\r\n                    this.currentIndex[i].isSelect=true;\r\n                }else{\r\n                // 4:其它元素状态false\r\n                this.currentIndex[i].isSelect=false;\r\n                }\r\n              }\r\n            },\r\n            //子组件在运行的时候 需要父组件传递进去\r\n            mysearch() { //TitleBar子组件所需处理函数\r\n                console.log(\"搜索\")\r\n            },\r\n            myadd3() { //TitleBar子组件所需处理函数\r\n                console.log(\"添加\")\r\n            }\r\n        },\r\n        components: {\r\n            //注册顶部标题子组件\r\n            \"titlebar\": TitleBar,\r\n            //注册消息列表子组件\r\n            \"messagelist\": MessageList,\r\n            //注册底部导航图片子组件\r\n            \"tabbaricon\": TabBarIcon\r\n        }\r\n    }\r\n</script>\r\n<style scoped>\r\n    /* 3:修改组件默认的样式 */\r\n    .mint-tabbar>.mint-tab-item {\r\n        color: #999999;\r\n    }\r\n\r\n    /* 4:修改组件选中的样式 */\r\n    .mint-tabbar>.mint-tab-item.is-selected {\r\n        background-color: transparent;\r\n        color: #45c018;\r\n    }\r\n</style>"],"sourceRoot":"src\\components\\messsage"}]}