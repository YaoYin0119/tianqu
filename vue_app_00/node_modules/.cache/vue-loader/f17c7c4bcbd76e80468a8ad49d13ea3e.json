{"remainingRequest":"c:\\Users\\tarena\\Desktop\\新建文件夹\\vue_app_000\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!c:\\Users\\tarena\\Desktop\\新建文件夹\\vue_app_000\\vue_app_00\\src\\components\\xz\\product.vue?vue&type=style&index=0&id=05005f85&scoped=true&lang=css","dependencies":[{"path":"c:\\Users\\tarena\\Desktop\\新建文件夹\\vue_app_000\\vue_app_00\\src\\components\\xz\\product.vue","mtime":1564735206985},{"path":"c:\\Users\\tarena\\Desktop\\新建文件夹\\vue_app_000\\vue_app_00\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"c:\\Users\\tarena\\Desktop\\新建文件夹\\vue_app_000\\vue_app_00\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1521907988000},{"path":"c:\\Users\\tarena\\Desktop\\新建文件夹\\vue_app_000\\vue_app_00\\node_modules\\postcss-loader\\lib\\index.js","mtime":499162500000},{"path":"c:\\Users\\tarena\\Desktop\\新建文件夹\\vue_app_000\\vue_app_00\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"c:\\Users\\tarena\\Desktop\\新建文件夹\\vue_app_000\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* 1:最外层样式 */\n.product-app{\n    display:flex;\n    flex-wrap: wrap; /*折行*/\n    justify-content: space-between;\n    padding: 4px;\n}\n/* 2:修饰商品样式 */\n.goods-item{\n    width: 49%;  /*一行放2个*/ \n    border:1px solid #ccc;\n    border-radius: 5px;\n    box-sizing: border-box;\n    display: flex;\n    flex-direction: column;/*指定子元素的排列方式*/\n    min-height: 247px;\n}\n/* 3:修饰商品中图片样式 */\n.goods-item>img{\n    width: 100%;\n}\n",{"version":3,"sources":["product.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"product.vue","sourceRoot":"src\\components\\xz","sourcesContent":["<template>\r\n    <div class=\"product-app\">\r\n        <!-- product.vue -->\r\n        <!-- 一个商品 循环 -->\r\n        <div v-for=\"(item,i) of list\" :key=\"i\" class=\"goods-item\">\r\n            <img :src=\"'http://127.0.0.1:3000/'+item.img_url\" />\r\n            <h4>{{item.lname}}</h4>\r\n            <div class=\"info\">\r\n                ￥{{item.price}}\r\n            </div>\r\n            <mt-button @click=\"addCart\"\r\n             :data-lid=\"item.lid\" \r\n             :data-price=\"item.price\" \r\n             :data-lname=\"item.lname\">加入购物车</mt-button>\r\n        </div>\r\n        <!-- 加载更多按钮 -->\r\n        <!-- 为按钮添加点击事件:完成加载更多 -->\r\n        <mt-button @click=\"jumpCart\">查看购物车</mt-button>\r\n        <mt-button @click.native=\"loadMore\" type=\"primary\" size=\"large\">加载更多</mt-button>\r\n        \r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    data(){\r\n        return{\r\n            list:[],//商品的列表数组\r\n            pno:0,   //页码(第几页)\r\n        }\r\n    },\r\n    methods:{\r\n        jumpCart(){\r\n            //查看购物车操作\r\n            //跳转购物车组件\r\n            this.$router.push(\"/cart\")\r\n        },\r\n        addCart(e){\r\n            //功能：将商品添加至购物车 lid 编号  p价格 n商品名称\r\n            var lid=e.target.dataset.lid;\r\n            var p=e.target.dataset.price;\r\n            var n=e.target.dataset.lname;\r\n            // console.log(lid+\":\",p+\":\",n+\":\");\r\n            // 2：发送ajax请求\r\n            // 2.1：请求服务器地址\r\n            var url = \"addcart\";\r\n            // 2.2:请求参数\r\n            var obj={lid:lid,lname:n,price:p}\r\n            // 3:获取返回的结果\r\n            this.axios.get(url,{params:obj}).then(res=>{\r\n                \r\n                // 3.1:如果-1提示用户信息\r\n                if(res.data.code==-1){\r\n                    this.$toast(\"请先登录再购买商品\")\r\n                    return;\r\n                }\r\n                // 3.2:如果1提示用户添加成功\r\n                this.$toast(\"添加成功\")\r\n            })\r\n        },\r\n        loadMore(){\r\n            //功能：获取分页的数据\r\n            // 1:发送请求\r\n            var url=\"product\";\r\n            //当前页码加1\r\n            this.pno++;\r\n            //创建参数对象\r\n            var obj={pno:this.pno};\r\n            //发送ajax请求获取当前页内容\r\n            this.axios.get(url,{params:obj}).then(res=>{\r\n                // 2:获取服务器返回结果\r\n                // 3:将返回结果保存\r\n                //var rows=1页。concat(2页)\r\n                // this.list=res.data.data\r\n                var rows=this.list.concat(res.data.data)\r\n                this.list=rows;\r\n            })\r\n            \r\n        }\r\n    },\r\n    created(){\r\n        this.loadMore()\r\n        console.log(\"1:组件创建成功\")\r\n    },\r\n}\r\n</script>\r\n<style scoped>\r\n    /* 1:最外层样式 */\r\n    .product-app{\r\n        display:flex;\r\n        flex-wrap: wrap; /*折行*/\r\n        justify-content: space-between;\r\n        padding: 4px;\r\n    }\r\n    /* 2:修饰商品样式 */\r\n    .goods-item{\r\n        width: 49%;  /*一行放2个*/ \r\n        border:1px solid #ccc;\r\n        border-radius: 5px;\r\n        box-sizing: border-box;\r\n        display: flex;\r\n        flex-direction: column;/*指定子元素的排列方式*/\r\n        min-height: 247px;\r\n    }\r\n    /* 3:修饰商品中图片样式 */\r\n    .goods-item>img{\r\n        width: 100%;\r\n    }\r\n</style>"]}]}